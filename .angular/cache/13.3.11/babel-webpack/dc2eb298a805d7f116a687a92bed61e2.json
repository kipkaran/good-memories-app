{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { forkJoin, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AlbumsServiceService = /*#__PURE__*/(() => {\n  class AlbumsServiceService {\n    constructor(httpClient) {\n      this.httpClient = httpClient; // Variables to store the urls of where the data is received from\n\n      this.usersUrl = 'https://jsonplaceholder.typicode.com/users';\n      this.albumsUrl = 'https://jsonplaceholder.typicode.com/albums';\n      this.photosUrl = 'https://jsonplaceholder.typicode.com/photos';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    } // method using get to fetch data from the server acting as an API\n\n\n    getUsersWithAlbumDetails() {\n      const users$ = this.httpClient.get(this.usersUrl);\n      const albums$ = this.httpClient.get(this.albumsUrl);\n      const photos$ = this.httpClient.get(this.photosUrl);\n      return forkJoin([users$, albums$, photos$]).pipe(map(([users, albums, photos]) => {\n        return users.map(user => {\n          //gets all the albums for current user\n          const userAlbums = albums.filter(album => album.userId === user.id); //each album is mapped to include include its photo count and cover photo\n\n          const enhancedAlbums = userAlbums.map(album => {\n            const albumPhotos = photos.filter(photo => photo.albumId === album.id);\n            return Object.assign(Object.assign({}, album), {\n              photoCount: albumPhotos.length,\n              coverPhoto: albumPhotos.length > 0 ? albumPhotos[0].thumbnailUrl : null\n            });\n          });\n          return Object.assign(Object.assign({}, user), {\n            albums: enhancedAlbums\n          });\n        });\n      }));\n    }\n\n  }\n\n  AlbumsServiceService.ɵfac = function AlbumsServiceService_Factory(t) {\n    return new (t || AlbumsServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AlbumsServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlbumsServiceService,\n    factory: AlbumsServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return AlbumsServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}